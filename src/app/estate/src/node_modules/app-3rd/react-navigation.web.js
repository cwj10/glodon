import React from 'react'
import { NoMatch, Switch, Route, Link } from 'react-router'
import { View, Text, TouchableOpacity } from 'react-native'

// third lib
import { NavigationActions, StackActions } from './lib/react-navigation/src/react-navigation'
import { goBack, replace } from 'connected-react-router';

export function createStackNavigator(screens, configure) {
    function createStackView(Screen,configure) {
        const Navigator = {
            state:{
                params:{}
            },
            navigator : {},
            onChangeNavigator:(action)=>{
                // configure.onChangeNavigator();
            },
            dispatch:(action)=>{
                // this.props.history.push('/LoginPage')
                alert('dispatch')
                this.onChangeNavigator('xxxx');
            },
            goBack:()=>{
                alert('goBack')
                this.onChangeNavigator('xxxx');
            },
            pop:()=>{
                alert('pop')
                this.onChangeNavigator('xxxx');
            },
            replace:()=>{
                alert('replace')
                this.onChangeNavigator('xxxx');
            },
            navigate:()=>{
                alert('navigate')
                this.onChangeNavigator('xxxx');
            },
        };
        class StackView extends React.Component {
            render = () => {
                // alert(this.props.history.push)
                return (
                    <View style={{width:'100%',height:'100%'}}>
                        <TouchableOpacity onPress={()=>{this.props.history.push('/GuidePage')}}><Text style={{width:'100%',height:44,backgroundColor:'#00baf3'}}>Header View</Text></TouchableOpacity>
                        <Screen navigation={Navigator}/>
                    </View>)
            }
        }
        return StackView;
    }

    class StackRouter extends React.Component {

        render = () => {
            let initScreen = null;
            if (configure.initialRouteName) {
                let initScreenData = screens[configure.initialRouteName];
                initScreen = <Route path={'/'} exact component={createStackView(initScreenData.screen,this.props)} />
            }
            let arrayData = [];
            for (var key in screens) {
                arrayData.push({ key: key, item: screens[key] });
            }
            return (<Switch>
                {initScreen}
                {
                    arrayData.map((item, index) => {
                        return <Route key={item + '-' + index} path={'/' + item.key} exact component={createStackView(item.item.screen,this.props)} />
                    })}
                <Route component={NoMatch} />
            </Switch>)
        }
    }

    return StackRouter;
}

export { NavigationActions, StackActions }