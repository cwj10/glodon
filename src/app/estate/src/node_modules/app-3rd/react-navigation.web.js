import React from 'react'
import { NoMatch, Switch, Route, Link } from 'react-router'
import { View, Text, TouchableOpacity } from 'react-native'

// third lib
import { NavigationActions, StackActions } from './lib/react-navigation/src/react-navigation'
import { goBack, replace } from 'connected-react-router';
import { WebStackActions } from './WebStackActions';
const aboutCount = 0;
export function createStackNavigator(screens, configure) {

    function createStackView(Screen, configure) {
        let history = configure.history;
        const Navigator = {
            state: {
                params: {}
            },
            getParam: () => { },
            setParams: () => { },
            navigator: {},

            dispatch: (action) => {
                WebStackActions.dispatch(history, action);
            },
            goBack: (payload) => {
                let action = WebStackActions.back(payload);
                WebStackActions.dispatch(history, action);
            },
            pop: (payload) => {
                let action = WebStackActions.pop(payload);
                WebStackActions.dispatch(history, action);
            },
            replace: (routeName, params) => {
                let action = WebStackActions.replace({ 'routeName': routeName, 'params': params });
                WebStackActions.dispatch(history, action);
            },
            navigate: (routeName, params) => {
                let action = WebStackActions.navigate({ 'routeName': routeName, 'params': params });
                WebStackActions.dispatch(history, action);
            },
        };
        class StackView extends React.Component {

            render = () => {
                // alert(this.props.history.push)
                let state = this.props.location.state;
                Navigator.state.params = this.props.location.state;
                let count = 0;
                if (state && state.aboutCount) {
                    count = state.aboutCount
                }
                return (
                    <View style={{ width: '100%', height: '100%' }}>
                        <TouchableOpacity onPress={() => { aboutCount++; history.push("/AboutPage", { aboutCount: aboutCount }) }}><Text style={{ width: '100%', height: 44, backgroundColor: '#00baf3' }}>Header View{count}</Text></TouchableOpacity>
                        <TouchableOpacity onPress={() => { alert(11);history.go(0) }}><Text style={{ width: '100%', height: 44, backgroundColor: '#00baf3' }}>test history go</Text></TouchableOpacity>
                        <Screen navigation={Navigator} />
                    </View>)
            }
        }
        return StackView;
    }

    class StackRouter extends React.Component {

        render = () => {
            let initScreen = null;
            if (configure.initialRouteName) {
                let initScreenData = screens[configure.initialRouteName];
                initScreen = <Route path={'/'} exact component={createStackView(initScreenData.screen, this.props)} />
            }
            let arrayData = [];
            for (var key in screens) {
                arrayData.push({ key: key, item: screens[key] });
            }
            return (<Switch>
                {initScreen}
                {
                    arrayData.map((item, index) => {
                        return <Route key={item + '-' + index} path={'/' + item.key} exact component={createStackView(item.item.screen, this.props)} />
                    })}
                <Route component={NoMatch} />
            </Switch>)
        }
    }

    return StackRouter;
}

export { NavigationActions, StackActions }