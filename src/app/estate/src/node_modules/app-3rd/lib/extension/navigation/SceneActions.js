
/**
 * SCENE_KEYS.push({ key: "AboutPage", scene: screens["AboutPage"].screen });
 */
const SCENE_KEYS = []//page的相关信息                              
const SCENES = new Map();//存储所有已经渲染的page

const BACK = 'Navigation/BACK';
const NAVIGATE = 'Navigation/NAVIGATE';
const POP = 'Navigation/POP';
const PUSH = 'Navigation/PUSH';
const RESET = 'Navigation/RESET';
const REPLACE = 'Navigation/REPLACE';

const back = payload => ({
    type: BACK,
    key: payload.key,
});

const navigate = payload => ({
    type: NAVIGATE,
    ...payload,
});

const pop = payload => ({
    type: POP,
    ...payload,
});
const push = payload => ({
    type: PUSH,
    ...payload,
});
const reset = payload => ({
    type: RESET,
    ...payload,
});
const replace = payload => ({
    type: REPLACE,
    ...payload,
});

function dispatch(screens, action, eventHandler) {

    let key = action.routeName;
    let params = action.params;
    switch (action.type) {
        case BACK:
            SCENE_KEYS.pop();
            eventHandler(params);
            break;
        case NAVIGATE:
            SCENE_KEYS.push({ key: _generateKey(key), scene: _findScreen(screens, key) });
            eventHandler(params);
            break;
        case POP:

            break;
        case PUSH:
            break;
        case RESET:
            break;
        case REPLACE:
            SCENE_KEYS.pop();
            SCENE_KEYS.push({ key: _generateKey(key), scene: _findScreen(screens, key) });
            eventHandler(params);
            break;
        default:
            break;

    }
}


function _generateKey(key) {
    return key;
}

function _findScreen(screens, key) {
    return screens[key].screen
}

function clear() {
    SCENE_KEYS.length = 0;
    SCENES.clear();
}

export const SceneActions = {
    BACK,
    NAVIGATE,
    POP,
    PUSH,
    RESET,
    REPLACE,

    back,
    navigate,
    pop,
    push,
    reset,
    replace,
    dispatch,
    clear,
}

export {
    SCENE_KEYS,
    SCENES
}